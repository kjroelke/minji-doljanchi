---
import DoljabiOffcanvas from './DoljabiOffcanvas.astro';

const doljabiOptions = [
	{ value: '', label: 'Choose a Doljabi Item...', disabled: true },
	{ value: 'scholar', label: '‚úèÔ∏è Pencil (Scholar)' },
	{ value: 'wealth', label: 'üíµ Money (Wealth)' },
	{ value: 'long life', label: 'üßµ Thread (Long Life)' },
	{ value: 'medical professional', label: 'ü©∫ Stethoscope (Doctor)' },
	{ value: 'performer/entertainer', label: 'üé§ Microphone (Performer)' },
	{ value: 'athlete', label: '‚öΩ Soccer Ball (Athlete)' },
	{ value: 'artist/creative', label: 'üñåÔ∏è Paintbrush (Artist)' },
];
---

<form
	id='doljabi-form'
	action='https://formspree.io/f/xnnvydrq'
	method='POST'
	class='text-md-center d-flex flex-column row-gap-3 align-items-center'
>
	<div
		class='row row-cols-1 row-cols-md-auto row-gap-3 justify-content-center'
	>
		<div class='col'>
			<input
				type='text'
				class='form-control'
				placeholder='Your Name'
				name='name'
				required
				autocomplete='name'
			/>
		</div>
		<div class='col'>
			<select
				class='form-select'
				name='vote'
				required
			>
				{
					doljabiOptions.map((option) => (
						<option
							value={option.value}
							disabled={option.disabled}
						>
							{option.label}
						</option>
					))
				}
			</select>
		</div>
	</div>
	<div class='col-auto d-flex gap-3'>
		<button
			type='submit'
			class='btn btn-dark'
			id='doljabi-submit-btn'
			style='position: relative; min-width: 100px;'
		>
			<span
				id='doljabi-submit-spinner'
				class='spinner-border spinner-border-sm me-2 d-none'
				role='status'
				aria-hidden='true'
			></span>
			<span id='doljabi-submit-text'>Cast Your Vote!</span>
		</button>
		<button
			class='btn btn-primary'
			type='button'
			data-bs-toggle='offcanvas'
			data-bs-target='#doljabiOffcanvas'
			aria-controls='doljabiOffcanvas'
		>
			Wait, what?
		</button>
	</div>
	<DoljabiOffcanvas />
</form>
<div
	id='doljabi-form-message'
	class='mt-3'
>
</div>
<script>
	import confetti from 'canvas-confetti';
	const form = document.getElementById(
		'doljabi-form'
	) as HTMLFormElement | null;
	const messageDiv = document.getElementById(
		'doljabi-form-message'
	) as HTMLDivElement | null;
	const submitBtn = document.getElementById(
		'doljabi-submit-btn'
	) as HTMLButtonElement | null;
	const submitText = document.getElementById(
		'doljabi-submit-text'
	) as HTMLSpanElement | null;
	const submitSpinner = document.getElementById(
		'doljabi-submit-spinner'
	) as HTMLSpanElement | null;

	// Confetti helper
	function launchConfetti() {
		confetti({
			particleCount: 120,
			spread: 80,
			origin: { y: 0.7 },
			disableForReducedMotion: true,
		});
	}

	// Helper: set cookie
	function setSessionCookie(name: string, value: string, days = 1) {
		const expires = new Date(Date.now() + days * 864e5).toUTCString();
		document.cookie =
			name +
			'=' +
			encodeURIComponent(value) +
			'; expires=' +
			expires +
			'; path=/minji-doljanchi; samesite=strict';
	}
	// Helper: get cookie
	function getSessionCookie(name: string) {
		return document.cookie.split('; ').reduce((r, v) => {
			const parts = v.split('=');
			return parts[0] === name ? decodeURIComponent(parts[1]) : r;
		}, '');
	}

	// On page load, check for vote
	const userVote = getSessionCookie('doljabi_vote');
	if (userVote && messageDiv && form) {
		form.remove();
		messageDiv.innerHTML = `<div class='alert alert-primary text-center'>You already voted: <strong>${userVote}</strong></div>`;
		// Confetti when alert is scrolled into view
		const observer = new window.IntersectionObserver(
			(entries, obs) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						launchConfetti();
						obs.disconnect();
					}
				});
			},
			{ threshold: 1 }
		);
		observer.observe(messageDiv);
	}

	form?.addEventListener('submit', async (e) => {
		e.preventDefault();
		if (!submitBtn) return;
		submitBtn.disabled = true;
		if (submitSpinner) submitSpinner.classList.remove('d-none');
		if (submitText) submitText.textContent = 'Submitting...';
		if (messageDiv) messageDiv.textContent = '';
		if (!form) return;
		const formData = new FormData(form);
		const data = Object.fromEntries(formData.entries());
		if (!data.name || !data.vote) {
			if (messageDiv)
				messageDiv.textContent = 'Please fill out all fields.';
			submitBtn.disabled = false;
			if (submitSpinner) submitSpinner.classList.add('d-none');
			if (submitText) submitText.textContent = 'Cast Your Vote!';
			return;
		}
		try {
			const response = await fetch(form.action, {
				method: form.method,
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(data),
			});
			const result = await response.json();
			if (result.ok) {
				setSessionCookie('doljabi_vote', data.vote as string, 1);
				if (form) form.remove();
				if (messageDiv)
					messageDiv.innerHTML = `<div class='alert alert-success text-center'>Thank you for your vote!<br>Your vote: <strong>${data.vote}</strong></div>`;
				launchConfetti();
			} else {
				if (messageDiv)
					messageDiv.textContent =
						result.error ||
						'There was an error submitting your vote.';
			}
		} catch (err) {
			if (messageDiv)
				messageDiv.textContent =
					'There was an error submitting your vote. Please try again later.';
		} finally {
			if (submitSpinner) submitSpinner.classList.add('d-none');
			if (submitText) submitText.textContent = 'Cast Your Vote!';
		}
	});
</script>
